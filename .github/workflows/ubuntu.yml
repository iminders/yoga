name: Ubuntu
# Qt官方没有linux平台的x86包
on:
  push:
    paths:
      - "*.pro"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
  pull_request:
    paths:
      - "*.pro"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        qt_ver: [6.2.4]
        qt_arch: [gcc_64]
        exclude:
          # Qt6.2.4 need GLIBC_2.28, ubuntu 18.04 have not.
          - os: ubuntu-18.04
            qt_ver: 6.2.4
            qt_arch: gcc_64
    env:
      targetSimpleName: yoga
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          cached: "false"
      - name: ubuntu install GL library
        run: sudo apt-get install -y libglew-dev libglfw3-dev
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build
        run: |
          qmake
          make
      # 打包
      - name: Package
        id: Package
        env:
          archiveName: ${{ env.targetSimpleName }}_${{ matrix.os }}_${{ matrix.qt_ver }}
        run: |
          mkdir AppDir
          cp bin/release/${{ env.targetSimpleName }} AppDir
          wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
          chmod +x linuxdeploy*.AppImage
          export EXTRA_QT_PLUGINS=svg
          export OUTPUT=${env:archiveName}.AppImage
          ./linuxdeploy-x86_64.AppImage ${{ env.targetSimpleName }}
          ./linuxdeploy-x86_64.AppImage ${env:archiveName} -appimage -verbose=2

      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: ${env:archiveName}.AppImage
          path: ${env:archiveName}.AppImage

name: Ubuntu
# Qt官方没有linux平台的x86包
on:
  push:
    paths:
      - "*.pro"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
  pull_request:
    paths:
      - "*.pro"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        qt_ver: [5.12.10]
        qt_arch: [gcc_64]

    env:
      targetSimpleName: yoga

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          cached: "false"
      - name: ubuntu install library
        run: |
          sudo apt update
          sudo apt-get install -y libeigen3-dev
          sudo ln -s /usr/include/eigen3 /usr/local/include/eigen3
          sudo apt-get install -y patchelf libeigen3-dev
          sudo apt-get install -y libglew-dev libglfw3-dev libgtk2.0-dev libgstreamer-plugins-base1.0-0 libspeechd-dev libspeechd2
          sudo apt-get install -y libqt5quickcontrols2-5 libqt5multimedia5 libqt5webengine5 libqt5quick5 libqt5qml5
          sudo apt install desktop-file-utils libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-composite0 libxcb-cursor0 libxcb-damage0 libxcb-dpms0 libxcb-dri2-0 libxcb-dri3-0 libxcb-ewmh2 libxcb-glx0 libxcb-present0 libxcb-randr0 libxcb-record0 libxcb-render0 libxcb-res0 libxcb-screensaver0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb-util1

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build
        run: |
          qmake
          make
      # 打包 TODO
      # - name: Package
      #   id: Package
      #   env:
      #     archiveName: ${{ env.targetSimpleName }}_${{ matrix.os }}_${{ github.event.release.tag_name }}
      #   run: |
      #     mkdir AppDir
      #     export LD_LIBRARY_PATH=/home/runner/work/yoga/Qt/${{ matrix.qt_ver }}/${{ matrix.qt_arch }}/lib:$LD_LIBRARY_PATH
      #     export QT_PLUGIN_PATH=/home/runner/work/yoga/Qt/${{ matrix.qt_ver }}/${{ matrix.qt_arch }}/plugins:$QT_PLUGIN_PATH
      #     export QML2_IMPORT_PATH=/home/runner/work/yoga/Qt/${{ matrix.qt_ver }}/${{ matrix.qt_arch }}/qml:$QML2_IMPORT_PATH
      #     wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O /usr/local/bin/linuxdeployqt
      #     chmod a+x /usr/local/bin/linuxdeployqt
      #     cp bin/release/${{ env.targetSimpleName }} AppDir/
      #     cd AppDir
      #     linuxdeployqt ${{ env.targetSimpleName }} -appimage -always-overwrite -verbose=1
      #     cd ..
      #     ls -l AppDir
      #     mv AppDir/${{ env.targetSimpleName }}.AppImage ${{ env.archiveName }}.AppImage

      # - name: Upload Package
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: ${env:archiveName}.AppImage
      #     path: ${env:archiveName}.AppImage

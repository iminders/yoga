name: Ubuntu
# Qt官方没有linux平台的x86包
on:
  push:
    paths:
      - "*.pro"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
  pull_request:
    paths:
      - "*.pro"
      - "src/**"
      - ".github/workflows/ubuntu.yml"
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        qt_ver: [5.15.2]
        qt_arch: [gcc_64]

    env:
      targetSimpleName: yoga
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          cached: "false"
      - name: ubuntu install GL library
        run: |
          sudo apt update
          sudo apt-get install -y libglew-dev libglfw3-dev
          sudo apt install desktop-file-utils libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-composite0 libxcb-cursor0 libxcb-damage0 libxcb-dpms0 libxcb-dri2-0 libxcb-dri3-0 libxcb-ewmh2 libxcb-glx0 libxcb-present0 libxcb-randr0 libxcb-record0 libxcb-render0 libxcb-res0 libxcb-screensaver0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb-util1

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: build
        run: |
          qmake
          make
      # 打包
      - name: Package
        id: Package
        env:
          archiveName: ${{ env.targetSimpleName }}_${{ matrix.os }}_${{ github.event.release.tag_name }}
        run: |
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -O linuxdeployqt
          chmod a+x linuxdeployqt
          export VERSION=${{ github.event.release.tag_name }}
          ./linuxdeployqt bin/release/${{ env.targetSimpleName }} -appimage -verbose=1
          mv bin/release/default.desktop ${env:archiveName}.AppImage

      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: ${env:archiveName}.AppImage
          path: ${env:archiveName}.AppImage
